{
  "version": 3,
  "sources": ["../../preact-render-to-string/src/util.js", "../../preact-render-to-string/src/pretty.js", "../../preact-render-to-string/src/index.js", "dep:preact-render-to-string"],
  "sourcesContent": ["// DOM properties that should NOT have \"px\" added when numeric\r\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\r\nexport const VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\r\nexport const UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\r\nexport const XLINK = /^xlink:?./;\r\n\r\nconst ENCODED_ENTITIES = /[\"&<]/;\r\n\r\nexport function encodeEntities(str) {\r\n\t// Ensure we're always parsing and returning a string:\r\n\tstr += '';\r\n\r\n\t// Skip all work for strings with no entities needing encoding:\r\n\tif (ENCODED_ENTITIES.test(str) === false) return str;\r\n\r\n\tlet last = 0,\r\n\t\ti = 0,\r\n\t\tout = '',\r\n\t\tch = '';\r\n\r\n\t// Seek forward in str until the next entity char:\r\n\tfor (; i < str.length; i++) {\r\n\t\tswitch (str.charCodeAt(i)) {\r\n\t\t\tcase 34:\r\n\t\t\t\tch = '&quot;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38:\r\n\t\t\t\tch = '&amp;';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 60:\r\n\t\t\t\tch = '&lt;';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcontinue;\r\n\t\t}\r\n\t\t// Append skipped/buffered characters and the encoded entity:\r\n\t\tif (i !== last) out += str.slice(last, i);\r\n\t\tout += ch;\r\n\t\t// Start the next seek/buffer after the entity's offset:\r\n\t\tlast = i + 1;\r\n\t}\r\n\tif (i !== last) out += str.slice(last, i);\r\n\treturn out;\r\n}\r\n\r\nexport let indent = (s, char) =>\r\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\r\n\r\nexport let isLargeString = (s, length, ignoreLines) =>\r\n\tString(s).length > (length || 40) ||\r\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\r\n\tString(s).indexOf('<') !== -1;\r\n\r\nconst JS_TO_CSS = {};\r\n\r\nconst CSS_REGEX = /([A-Z])/g;\r\n// Convert an Object style to a CSSText string\r\nexport function styleObjToCss(s) {\r\n\tlet str = '';\r\n\tfor (let prop in s) {\r\n\t\tlet val = s[prop];\r\n\t\tif (val != null && val !== '') {\r\n\t\t\tif (str) str += ' ';\r\n\t\t\t// str += jsToCss(prop);\r\n\t\t\tstr +=\r\n\t\t\t\tprop[0] == '-'\r\n\t\t\t\t\t? prop\r\n\t\t\t\t\t: JS_TO_CSS[prop] ||\r\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$1').toLowerCase());\r\n\r\n\t\t\tif (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\r\n\t\t\t\tstr = str + ': ' + val + 'px;';\r\n\t\t\t} else {\r\n\t\t\t\tstr = str + ': ' + val + ';';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn str || undefined;\r\n}\r\n\r\n/**\r\n * Get flattened children from the children prop\r\n * @param {Array} accumulator\r\n * @param {any} children A `props.children` opaque object.\r\n * @returns {Array} accumulator\r\n * @private\r\n */\r\nexport function getChildren(accumulator, children) {\r\n\tif (Array.isArray(children)) {\r\n\t\tchildren.reduce(getChildren, accumulator);\r\n\t} else if (children != null && children !== false) {\r\n\t\taccumulator.push(children);\r\n\t}\r\n\treturn accumulator;\r\n}\r\n\r\nfunction markAsDirty() {\r\n\tthis.__d = true;\r\n}\r\n\r\nexport function createComponent(vnode, context) {\r\n\treturn {\r\n\t\t__v: vnode,\r\n\t\tcontext,\r\n\t\tprops: vnode.props,\r\n\t\t// silently drop state updates\r\n\t\tsetState: markAsDirty,\r\n\t\tforceUpdate: markAsDirty,\r\n\t\t__d: true,\r\n\t\t// hooks\r\n\t\t__h: []\r\n\t};\r\n}\r\n\r\n// Necessary for createContext api. Setting this property will pass\r\n// the context value as `this.context` just for this component.\r\nexport function getContext(nodeName, context) {\r\n\tlet cxType = nodeName.contextType;\r\n\tlet provider = cxType && context[cxType.__c];\r\n\treturn cxType != null\r\n\t\t? provider\r\n\t\t\t? provider.props.value\r\n\t\t\t: cxType.__\r\n\t\t: context;\r\n}\r\n", "import {\r\n\tencodeEntities,\r\n\tindent,\r\n\tisLargeString,\r\n\tstyleObjToCss,\r\n\tgetChildren,\r\n\tcreateComponent,\r\n\tgetContext,\r\n\tUNSAFE_NAME,\r\n\tXLINK,\r\n\tVOID_ELEMENTS\r\n} from './util';\r\nimport { options, Fragment } from 'preact';\r\n\r\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\r\nconst UNNAMED = [];\r\n\r\nexport function _renderToStringPretty(\r\n\tvnode,\r\n\tcontext,\r\n\topts,\r\n\tinner,\r\n\tisSvgMode,\r\n\tselectValue\r\n) {\r\n\tif (vnode == null || typeof vnode === 'boolean') {\r\n\t\treturn '';\r\n\t}\r\n\r\n\t// #text nodes\r\n\tif (typeof vnode !== 'object') {\r\n\t\treturn encodeEntities(vnode);\r\n\t}\r\n\r\n\tlet pretty = opts.pretty,\r\n\t\tindentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\r\n\r\n\tif (Array.isArray(vnode)) {\r\n\t\tlet rendered = '';\r\n\t\tfor (let i = 0; i < vnode.length; i++) {\r\n\t\t\tif (pretty && i > 0) rendered = rendered + '\\n';\r\n\t\t\trendered =\r\n\t\t\t\trendered +\r\n\t\t\t\t_renderToStringPretty(\r\n\t\t\t\t\tvnode[i],\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\topts,\r\n\t\t\t\t\tinner,\r\n\t\t\t\t\tisSvgMode,\r\n\t\t\t\t\tselectValue\r\n\t\t\t\t);\r\n\t\t}\r\n\t\treturn rendered;\r\n\t}\r\n\r\n\tlet nodeName = vnode.type,\r\n\t\tprops = vnode.props,\r\n\t\tisComponent = false;\r\n\r\n\t// components\r\n\tif (typeof nodeName === 'function') {\r\n\t\tisComponent = true;\r\n\t\tif (opts.shallow && (inner || opts.renderRootComponent === false)) {\r\n\t\t\tnodeName = getComponentName(nodeName);\r\n\t\t} else if (nodeName === Fragment) {\r\n\t\t\tconst children = [];\r\n\t\t\tgetChildren(children, vnode.props.children);\r\n\t\t\treturn _renderToStringPretty(\r\n\t\t\t\tchildren,\r\n\t\t\t\tcontext,\r\n\t\t\t\topts,\r\n\t\t\t\topts.shallowHighOrder !== false,\r\n\t\t\t\tisSvgMode,\r\n\t\t\t\tselectValue\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlet rendered;\r\n\r\n\t\t\tlet c = (vnode.__c = createComponent(vnode, context));\r\n\r\n\t\t\t// options._diff\r\n\t\t\tif (options.__b) options.__b(vnode);\r\n\r\n\t\t\t// options._render\r\n\t\t\tlet renderHook = options.__r;\r\n\r\n\t\t\tif (\r\n\t\t\t\t!nodeName.prototype ||\r\n\t\t\t\ttypeof nodeName.prototype.render !== 'function'\r\n\t\t\t) {\r\n\t\t\t\tlet cctx = getContext(nodeName, context);\r\n\r\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\r\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\r\n\t\t\t\t// Note:\r\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\r\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\twhile (c.__d && count++ < 25) {\r\n\t\t\t\t\tc.__d = false;\r\n\r\n\t\t\t\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t\t\t\t// stateless functional components\r\n\t\t\t\t\trendered = nodeName.call(vnode.__c, props, cctx);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet cctx = getContext(nodeName, context);\r\n\r\n\t\t\t\t// c = new nodeName(props, context);\r\n\t\t\t\tc = vnode.__c = new nodeName(props, cctx);\r\n\t\t\t\tc.__v = vnode;\r\n\t\t\t\t// turn off stateful re-rendering:\r\n\t\t\t\tc._dirty = c.__d = true;\r\n\t\t\t\tc.props = props;\r\n\t\t\t\tif (c.state == null) c.state = {};\r\n\r\n\t\t\t\tif (c._nextState == null && c.__s == null) {\r\n\t\t\t\t\tc._nextState = c.__s = c.state;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tc.context = cctx;\r\n\t\t\t\tif (nodeName.getDerivedStateFromProps)\r\n\t\t\t\t\tc.state = Object.assign(\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t\tc.state,\r\n\t\t\t\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\r\n\t\t\t\t\t);\r\n\t\t\t\telse if (c.componentWillMount) {\r\n\t\t\t\t\tc.componentWillMount();\r\n\r\n\t\t\t\t\t// If the user called setState in cWM we need to flush pending,\r\n\t\t\t\t\t// state updates. This is the same behaviour in React.\r\n\t\t\t\t\tc.state =\r\n\t\t\t\t\t\tc._nextState !== c.state\r\n\t\t\t\t\t\t\t? c._nextState\r\n\t\t\t\t\t\t\t: c.__s !== c.state\r\n\t\t\t\t\t\t\t? c.__s\r\n\t\t\t\t\t\t\t: c.state;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t\t\trendered = c.render(c.props, c.state, c.context);\r\n\t\t\t}\r\n\r\n\t\t\tif (c.getChildContext) {\r\n\t\t\t\tcontext = Object.assign({}, context, c.getChildContext());\r\n\t\t\t}\r\n\r\n\t\t\tif (options.diffed) options.diffed(vnode);\r\n\t\t\treturn _renderToStringPretty(\r\n\t\t\t\trendered,\r\n\t\t\t\tcontext,\r\n\t\t\t\topts,\r\n\t\t\t\topts.shallowHighOrder !== false,\r\n\t\t\t\tisSvgMode,\r\n\t\t\t\tselectValue\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// render JSX to HTML\r\n\tlet s = '<' + nodeName,\r\n\t\tpropChildren,\r\n\t\thtml;\r\n\r\n\tif (props) {\r\n\t\tlet attrs = Object.keys(props);\r\n\r\n\t\t// allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\r\n\t\tif (opts && opts.sortAttributes === true) attrs.sort();\r\n\r\n\t\tfor (let i = 0; i < attrs.length; i++) {\r\n\t\t\tlet name = attrs[i],\r\n\t\t\t\tv = props[name];\r\n\t\t\tif (name === 'children') {\r\n\t\t\t\tpropChildren = v;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\r\n\r\n\t\t\tif (\r\n\t\t\t\t!(opts && opts.allAttributes) &&\r\n\t\t\t\t(name === 'key' ||\r\n\t\t\t\t\tname === 'ref' ||\r\n\t\t\t\t\tname === '__self' ||\r\n\t\t\t\t\tname === '__source')\r\n\t\t\t)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (name === 'defaultValue') {\r\n\t\t\t\tname = 'value';\r\n\t\t\t} else if (name === 'defaultChecked') {\r\n\t\t\t\tname = 'checked';\r\n\t\t\t} else if (name === 'defaultSelected') {\r\n\t\t\t\tname = 'selected';\r\n\t\t\t} else if (name === 'className') {\r\n\t\t\t\tif (typeof props.class !== 'undefined') continue;\r\n\t\t\t\tname = 'class';\r\n\t\t\t} else if (isSvgMode && XLINK.test(name)) {\r\n\t\t\t\tname = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'htmlFor') {\r\n\t\t\t\tif (props.for) continue;\r\n\t\t\t\tname = 'for';\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'style' && v && typeof v === 'object') {\r\n\t\t\t\tv = styleObjToCss(v);\r\n\t\t\t}\r\n\r\n\t\t\t// always use string values instead of booleans for aria attributes\r\n\t\t\t// also see https://github.com/preactjs/preact/pull/2347/files\r\n\t\t\tif (name[0] === 'a' && name['1'] === 'r' && typeof v === 'boolean') {\r\n\t\t\t\tv = String(v);\r\n\t\t\t}\r\n\r\n\t\t\tlet hooked =\r\n\t\t\t\topts.attributeHook &&\r\n\t\t\t\topts.attributeHook(name, v, context, opts, isComponent);\r\n\t\t\tif (hooked || hooked === '') {\r\n\t\t\t\ts = s + hooked;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\r\n\t\t\t\thtml = v && v.__html;\r\n\t\t\t} else if (nodeName === 'textarea' && name === 'value') {\r\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\r\n\t\t\t\tpropChildren = v;\r\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\r\n\t\t\t\tif (v === true || v === '') {\r\n\t\t\t\t\tv = name;\r\n\t\t\t\t\t// in non-xml mode, allow boolean attributes\r\n\t\t\t\t\tif (!opts || !opts.xml) {\r\n\t\t\t\t\t\ts = s + ' ' + name;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (name === 'value') {\r\n\t\t\t\t\tif (nodeName === 'select') {\r\n\t\t\t\t\t\tselectValue = v;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\r\n\t\t\t\t\t\tnodeName === 'option' &&\r\n\t\t\t\t\t\tselectValue == v &&\r\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\r\n\t\t\t\t\t\ttypeof props.selected === 'undefined'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ts = s + ` selected`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ts = s + ` ${name}=\"${encodeEntities(v)}\"`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// account for >1 multiline attribute\r\n\tif (pretty) {\r\n\t\tlet sub = s.replace(/\\n\\s*/, ' ');\r\n\t\tif (sub !== s && !~sub.indexOf('\\n')) s = sub;\r\n\t\telse if (pretty && ~s.indexOf('\\n')) s = s + '\\n';\r\n\t}\r\n\r\n\ts = s + '>';\r\n\r\n\tif (UNSAFE_NAME.test(nodeName))\r\n\t\tthrow new Error(`${nodeName} is not a valid HTML tag name in ${s}`);\r\n\r\n\tlet isVoid =\r\n\t\tVOID_ELEMENTS.test(nodeName) ||\r\n\t\t(opts.voidElements && opts.voidElements.test(nodeName));\r\n\tlet pieces = [];\r\n\r\n\tlet children;\r\n\tif (html) {\r\n\t\t// if multiline, indent.\r\n\t\tif (pretty && isLargeString(html)) {\r\n\t\t\thtml = '\\n' + indentChar + indent(html, indentChar);\r\n\t\t}\r\n\t\ts = s + html;\r\n\t} else if (\r\n\t\tpropChildren != null &&\r\n\t\tgetChildren((children = []), propChildren).length\r\n\t) {\r\n\t\tlet hasLarge = pretty && ~s.indexOf('\\n');\r\n\t\tlet lastWasText = false;\r\n\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tlet child = children[i];\r\n\r\n\t\t\tif (child != null && child !== false) {\r\n\t\t\t\tlet childSvgMode =\r\n\t\t\t\t\t\tnodeName === 'svg'\r\n\t\t\t\t\t\t\t? true\r\n\t\t\t\t\t\t\t: nodeName === 'foreignObject'\r\n\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t: isSvgMode,\r\n\t\t\t\t\tret = _renderToStringPretty(\r\n\t\t\t\t\t\tchild,\r\n\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\topts,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tchildSvgMode,\r\n\t\t\t\t\t\tselectValue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tif (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\r\n\r\n\t\t\t\t// Skip if we received an empty string\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\tif (pretty) {\r\n\t\t\t\t\t\tlet isText = ret.length > 0 && ret[0] != '<';\r\n\r\n\t\t\t\t\t\t// We merge adjacent text nodes, otherwise each piece would be printed\r\n\t\t\t\t\t\t// on a new line.\r\n\t\t\t\t\t\tif (lastWasText && isText) {\r\n\t\t\t\t\t\t\tpieces[pieces.length - 1] += ret;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpieces.push(ret);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastWasText = isText;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpieces.push(ret);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pretty && hasLarge) {\r\n\t\t\tfor (let i = pieces.length; i--; ) {\r\n\t\t\t\tpieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (pieces.length || html) {\r\n\t\ts = s + pieces.join('');\r\n\t} else if (opts && opts.xml) {\r\n\t\treturn s.substring(0, s.length - 1) + ' />';\r\n\t}\r\n\r\n\tif (isVoid && !children && !html) {\r\n\t\ts = s.replace(/>$/, ' />');\r\n\t} else {\r\n\t\tif (pretty && ~s.indexOf('\\n')) s = s + '\\n';\r\n\t\ts = s + `</${nodeName}>`;\r\n\t}\r\n\r\n\treturn s;\r\n}\r\n\r\nfunction getComponentName(component) {\r\n\treturn (\r\n\t\tcomponent.displayName ||\r\n\t\t(component !== Function && component.name) ||\r\n\t\tgetFallbackComponentName(component)\r\n\t);\r\n}\r\n\r\nfunction getFallbackComponentName(component) {\r\n\tlet str = Function.prototype.toString.call(component),\r\n\t\tname = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1];\r\n\tif (!name) {\r\n\t\t// search for an existing indexed name for the given component:\r\n\t\tlet index = -1;\r\n\t\tfor (let i = UNNAMED.length; i--; ) {\r\n\t\t\tif (UNNAMED[i] === component) {\r\n\t\t\t\tindex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// not found, create a new indexed name:\r\n\t\tif (index < 0) {\r\n\t\t\tindex = UNNAMED.push(component) - 1;\r\n\t\t}\r\n\t\tname = `UnnamedComponent${index}`;\r\n\t}\r\n\treturn name;\r\n}\r\n", "import {\r\n\tencodeEntities,\r\n\tstyleObjToCss,\r\n\tgetContext,\r\n\tcreateComponent,\r\n\tUNSAFE_NAME,\r\n\tXLINK,\r\n\tVOID_ELEMENTS\r\n} from './util';\r\nimport { options, h, Fragment } from 'preact';\r\nimport { _renderToStringPretty } from './pretty';\r\nimport {\r\n\tCOMMIT,\r\n\tCOMPONENT,\r\n\tDIFF,\r\n\tDIFFED,\r\n\tDIRTY,\r\n\tNEXT_STATE,\r\n\tPARENT,\r\n\tRENDER,\r\n\tSKIP_EFFECTS,\r\n\tVNODE,\r\n\tCHILDREN\r\n} from './constants';\r\n\r\n/** @typedef {import('preact').VNode} VNode */\r\n\r\nconst SHALLOW = { shallow: true };\r\n\r\n/** Render Preact JSX + Components to an HTML string.\r\n *\t@name render\r\n *\t@function\r\n *\t@param {VNode} vnode\tJSX VNode to render.\r\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\r\n *\t@param {Object} [options={}]\tRendering options\r\n *\t@param {Boolean} [options.shallow=false]\tIf `true`, renders nested Components as HTML elements (`<Foo a=\"b\" />`).\r\n *\t@param {Boolean} [options.xml=false]\t\tIf `true`, uses self-closing tags for elements without children.\r\n *\t@param {Boolean} [options.pretty=false]\t\tIf `true`, adds whitespace for readability\r\n *\t@param {RegExp|undefined} [options.voidElements]       RegeEx that matches elements that are considered void (self-closing)\r\n */\r\nrenderToString.render = renderToString;\r\n\r\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\r\n *\tThis method is just a convenience alias for `render(vnode, context, { shallow:true })`\r\n *\t@name shallow\r\n *\t@function\r\n *\t@param {VNode} vnode\tJSX VNode to render.\r\n *\t@param {Object} [context={}]\tOptionally pass an initial context object through the render path.\r\n */\r\nlet shallowRender = (vnode, context) => renderToString(vnode, context, SHALLOW);\r\n\r\nconst EMPTY_ARR = [];\r\nfunction renderToString(vnode, context, opts) {\r\n\tcontext = context || {};\r\n\r\n\t// Performance optimization: `renderToString` is synchronous and we\r\n\t// therefore don't execute any effects. To do that we pass an empty\r\n\t// array to `options._commit` (`__c`). But we can go one step further\r\n\t// and avoid a lot of dirty checks and allocations by setting\r\n\t// `options._skipEffects` (`__s`) too.\r\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\r\n\toptions[SKIP_EFFECTS] = true;\r\n\r\n\tconst parent = h(Fragment, null);\r\n\tparent[CHILDREN] = [vnode];\r\n\r\n\tlet res;\r\n\tif (\r\n\t\topts &&\r\n\t\t(opts.pretty ||\r\n\t\t\topts.voidElements ||\r\n\t\t\topts.sortAttributes ||\r\n\t\t\topts.shallow ||\r\n\t\t\topts.allAttributes ||\r\n\t\t\topts.xml ||\r\n\t\t\topts.attributeHook)\r\n\t) {\r\n\t\tres = _renderToStringPretty(vnode, context, opts);\r\n\t} else {\r\n\t\tres = _renderToString(vnode, context, false, undefined, parent);\r\n\t}\r\n\r\n\t// options._commit, we don't schedule any effects in this library right now,\r\n\t// so we can pass an empty queue to this hook.\r\n\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\r\n\toptions[SKIP_EFFECTS] = previousSkipEffects;\r\n\tEMPTY_ARR.length = 0;\r\n\r\n\treturn res;\r\n}\r\n\r\nfunction renderFunctionComponent(vnode, context) {\r\n\tlet rendered,\r\n\t\tc = createComponent(vnode, context),\r\n\t\tcctx = getContext(vnode.type, context);\r\n\r\n\tvnode[COMPONENT] = c;\r\n\r\n\t// If a hook invokes setState() to invalidate the component during rendering,\r\n\t// re-render it up to 25 times to allow \"settling\" of memoized states.\r\n\t// Note:\r\n\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\r\n\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\r\n\tlet renderHook = options[RENDER];\r\n\tlet count = 0;\r\n\twhile (c[DIRTY] && count++ < 25) {\r\n\t\tc[DIRTY] = false;\r\n\r\n\t\tif (renderHook) renderHook(vnode);\r\n\r\n\t\t// stateless functional components\r\n\t\trendered = vnode.type.call(c, vnode.props, cctx);\r\n\t}\r\n\r\n\treturn rendered;\r\n}\r\n\r\nfunction renderClassComponent(vnode, context) {\r\n\tlet nodeName = vnode.type,\r\n\t\tcctx = getContext(nodeName, context);\r\n\r\n\t// c = new nodeName(props, context);\r\n\tlet c = new nodeName(vnode.props, cctx);\r\n\tvnode[COMPONENT] = c;\r\n\tc[VNODE] = vnode;\r\n\t// turn off stateful re-rendering:\r\n\tc[DIRTY] = true;\r\n\tc.props = vnode.props;\r\n\tif (c.state == null) c.state = {};\r\n\r\n\tif (c[NEXT_STATE] == null) {\r\n\t\tc[NEXT_STATE] = c.state;\r\n\t}\r\n\r\n\tc.context = cctx;\r\n\tif (nodeName.getDerivedStateFromProps) {\r\n\t\tc.state = assign(\r\n\t\t\t{},\r\n\t\t\tc.state,\r\n\t\t\tnodeName.getDerivedStateFromProps(c.props, c.state)\r\n\t\t);\r\n\t} else if (c.componentWillMount) {\r\n\t\tc.componentWillMount();\r\n\r\n\t\t// If the user called setState in cWM we need to flush pending,\r\n\t\t// state updates. This is the same behaviour in React.\r\n\t\tc.state = c[NEXT_STATE] !== c.state ? c[NEXT_STATE] : c.state;\r\n\t}\r\n\r\n\tlet renderHook = options[RENDER];\r\n\tif (renderHook) renderHook(vnode);\r\n\r\n\treturn c.render(c.props, c.state, c.context);\r\n}\r\n\r\nfunction normalizePropName(name, isSvgMode) {\r\n\tif (name === 'className') {\r\n\t\treturn 'class';\r\n\t} else if (name === 'htmlFor') {\r\n\t\treturn 'for';\r\n\t} else if (name === 'defaultValue') {\r\n\t\treturn 'value';\r\n\t} else if (name === 'defaultChecked') {\r\n\t\treturn 'checked';\r\n\t} else if (name === 'defaultSelected') {\r\n\t\treturn 'selected';\r\n\t} else if (isSvgMode && XLINK.test(name)) {\r\n\t\treturn name.toLowerCase().replace(/^xlink:?/, 'xlink:');\r\n\t}\r\n\r\n\treturn name;\r\n}\r\n\r\nfunction normalizePropValue(name, v) {\r\n\tif (name === 'style' && v != null && typeof v === 'object') {\r\n\t\treturn styleObjToCss(v);\r\n\t} else if (name[0] === 'a' && name[1] === 'r' && typeof v === 'boolean') {\r\n\t\t// always use string values instead of booleans for aria attributes\r\n\t\t// also see https://github.com/preactjs/preact/pull/2347/files\r\n\t\treturn String(v);\r\n\t}\r\n\r\n\treturn v;\r\n}\r\n\r\nconst isArray = Array.isArray;\r\nconst assign = Object.assign;\r\n\r\n/** The default export is an alias of `render()`. */\r\nfunction _renderToString(vnode, context, isSvgMode, selectValue, parent) {\r\n\t// Ignore non-rendered VNodes/values\r\n\tif (vnode == null || vnode === true || vnode === false || vnode === '') {\r\n\t\treturn '';\r\n\t}\r\n\r\n\t// Text VNodes: escape as HTML\r\n\tif (typeof vnode !== 'object') {\r\n\t\treturn encodeEntities(vnode);\r\n\t}\r\n\r\n\t// Recurse into children / Arrays\r\n\tif (isArray(vnode)) {\r\n\t\tlet rendered = '';\r\n\t\tparent[CHILDREN] = vnode;\r\n\t\tfor (let i = 0; i < vnode.length; i++) {\r\n\t\t\trendered =\r\n\t\t\t\trendered +\r\n\t\t\t\t_renderToString(vnode[i], context, isSvgMode, selectValue, parent);\r\n\t\t}\r\n\t\treturn rendered;\r\n\t}\r\n\r\n\tvnode[PARENT] = parent;\r\n\tif (options[DIFF]) options[DIFF](vnode);\r\n\r\n\tlet type = vnode.type,\r\n\t\tprops = vnode.props;\r\n\r\n\t// Invoke rendering on Components\r\n\tconst isComponent = typeof type === 'function';\r\n\tif (isComponent) {\r\n\t\tlet rendered;\r\n\t\tif (type === Fragment) {\r\n\t\t\trendered = props.children;\r\n\t\t} else {\r\n\t\t\tif (type.prototype && typeof type.prototype.render === 'function') {\r\n\t\t\t\trendered = renderClassComponent(vnode, context);\r\n\t\t\t} else {\r\n\t\t\t\trendered = renderFunctionComponent(vnode, context);\r\n\t\t\t}\r\n\r\n\t\t\tlet component = vnode[COMPONENT];\r\n\t\t\tif (component.getChildContext) {\r\n\t\t\t\tcontext = assign({}, context, component.getChildContext());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Recurse into children before invoking the after-diff hook\r\n\t\tconst str = _renderToString(\r\n\t\t\trendered,\r\n\t\t\tcontext,\r\n\t\t\tisSvgMode,\r\n\t\t\tselectValue,\r\n\t\t\tvnode\r\n\t\t);\r\n\r\n\t\tif (options[DIFFED]) options[DIFFED](vnode);\r\n\t\tvnode[PARENT] = undefined;\r\n\r\n\t\tif (options.unmount) options.unmount(vnode);\r\n\r\n\t\treturn str;\r\n\t}\r\n\r\n\t// Serialize Element VNodes to HTML\r\n\tlet s = '<',\r\n\t\tchildren,\r\n\t\thtml;\r\n\r\n\ts = s + type;\r\n\r\n\tif (props) {\r\n\t\tchildren = props.children;\r\n\t\tfor (let name in props) {\r\n\t\t\tlet v = props[name];\r\n\r\n\t\t\tif (\r\n\t\t\t\tname === 'key' ||\r\n\t\t\t\tname === 'ref' ||\r\n\t\t\t\tname === '__self' ||\r\n\t\t\t\tname === '__source' ||\r\n\t\t\t\tname === 'children' ||\r\n\t\t\t\t(name === 'className' && 'class' in props) ||\r\n\t\t\t\t(name === 'htmlFor' && 'for' in props)\r\n\t\t\t) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (UNSAFE_NAME.test(name)) continue;\r\n\r\n\t\t\tname = normalizePropName(name, isSvgMode);\r\n\t\t\tv = normalizePropValue(name, v);\r\n\r\n\t\t\tif (name === 'dangerouslySetInnerHTML') {\r\n\t\t\t\thtml = v && v.__html;\r\n\t\t\t} else if (type === 'textarea' && name === 'value') {\r\n\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\r\n\t\t\t\tchildren = v;\r\n\t\t\t} else if ((v || v === 0 || v === '') && typeof v !== 'function') {\r\n\t\t\t\tif (v === true || v === '') {\r\n\t\t\t\t\tv = name;\r\n\t\t\t\t\ts = s + ' ' + name;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (name === 'value') {\r\n\t\t\t\t\tif (type === 'select') {\r\n\t\t\t\t\t\tselectValue = v;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t// If we're looking at an <option> and it's the currently selected one\r\n\t\t\t\t\t\ttype === 'option' &&\r\n\t\t\t\t\t\tselectValue == v &&\r\n\t\t\t\t\t\t// and the <option> doesn't already have a selected attribute on it\r\n\t\t\t\t\t\t!('selected' in props)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ts = s + ' selected';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ts = s + ' ' + name + '=\"' + encodeEntities(v) + '\"';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet startElement = s;\r\n\ts = s + '>';\r\n\r\n\tif (UNSAFE_NAME.test(type)) {\r\n\t\tthrow new Error(`${type} is not a valid HTML tag name in ${s}`);\r\n\t}\r\n\r\n\tlet pieces = '';\r\n\tlet hasChildren = false;\r\n\r\n\tif (html) {\r\n\t\tpieces = pieces + html;\r\n\t\thasChildren = true;\r\n\t} else if (typeof children === 'string') {\r\n\t\tpieces = pieces + encodeEntities(children);\r\n\t\thasChildren = true;\r\n\t} else if (isArray(children)) {\r\n\t\tvnode[CHILDREN] = children;\r\n\t\tfor (let i = 0; i < children.length; i++) {\r\n\t\t\tlet child = children[i];\r\n\t\t\tif (child != null && child !== false) {\r\n\t\t\t\tlet childSvgMode =\r\n\t\t\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\r\n\t\t\t\tlet ret = _renderToString(\r\n\t\t\t\t\tchild,\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tchildSvgMode,\r\n\t\t\t\t\tselectValue,\r\n\t\t\t\t\tvnode\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Skip if we received an empty string\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\tpieces = pieces + ret;\r\n\t\t\t\t\thasChildren = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (children != null && children !== false && children !== true) {\r\n\t\tvnode[CHILDREN] = [children];\r\n\t\tlet childSvgMode =\r\n\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\r\n\t\tlet ret = _renderToString(\r\n\t\t\tchildren,\r\n\t\t\tcontext,\r\n\t\t\tchildSvgMode,\r\n\t\t\tselectValue,\r\n\t\t\tvnode\r\n\t\t);\r\n\r\n\t\t// Skip if we received an empty string\r\n\t\tif (ret) {\r\n\t\t\tpieces = pieces + ret;\r\n\t\t\thasChildren = true;\r\n\t\t}\r\n\t}\r\n\r\n\tif (options[DIFFED]) options[DIFFED](vnode);\r\n\tvnode[PARENT] = undefined;\r\n\tif (options.unmount) options.unmount(vnode);\r\n\r\n\tif (hasChildren) {\r\n\t\ts = s + pieces;\r\n\t} else if (VOID_ELEMENTS.test(type)) {\r\n\t\treturn startElement + ' />';\r\n\t}\r\n\r\n\treturn s + '</' + type + '>';\r\n}\r\n\r\n/** The default export is an alias of `render()`. */\r\n\r\nrenderToString.shallowRender = shallowRender;\r\n\r\nexport default renderToString;\r\n\r\nexport {\r\n\trenderToString as render,\r\n\trenderToString as renderToStaticMarkup,\r\n\trenderToString,\r\n\tshallowRender\r\n};\r\n", "import d from \"./node_modules/preact-render-to-string/dist/index.module.js\";export default d;\nexport * from \"./node_modules/preact-render-to-string/dist/index.module.js\""],
  "mappings": "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",
  "names": ["IS_NON_DIMENSIONAL", "VOID_ELEMENTS", "UNSAFE_NAME", "XLINK", "ENCODED_ENTITIES", "encodeEntities", "str", "test", "last", "i", "out", "ch", "length", "charCodeAt", "slice", "indent", "s", "char", "String", "replace", "isLargeString", "ignoreLines", "indexOf", "JS_TO_CSS", "CSS_REGEX", "styleObjToCss", "prop", "val", "toLowerCase", "undefined", "getChildren", "accumulator", "children", "Array", "isArray", "reduce", "push", "markAsDirty", "this", "__d", "createComponent", "vnode", "context", "__v", "props", "setState", "forceUpdate", "__h", "getContext", "nodeName", "cxType", "contextType", "provider", "__c", "value", "__", "UNNAMED", "_renderToStringPretty", "opts", "inner", "isSvgMode", "selectValue", "pretty", "indentChar", "rendered", "component", "type", "isComponent", "shallow", "renderRootComponent", "Fragment", "shallowHighOrder", "c", "options", "__b", "renderHook", "__r", "prototype", "render", "cctx", "_dirty", "state", "_nextState", "__s", "getDerivedStateFromProps", "Object", "assign", "componentWillMount", "count", "call", "getChildContext", "diffed", "displayName", "Function", "name", "toString", "match", "index", "propChildren", "html", "attrs", "keys", "sortAttributes", "sort", "v", "allAttributes", "hooked", "attributeHook", "__html", "xml", "selected", "sub", "Error", "isVoid", "voidElements", "pieces", "hasLarge", "lastWasText", "child", "ret", "isText", "join", "substring", "SHALLOW", "renderToString", "shallowRender", "EMPTY_ARR", "previousSkipEffects", "res", "parent", "h", "_renderToString", "normalizePropName", "normalizePropValue", "unmount", "startElement", "hasChildren"]
}
